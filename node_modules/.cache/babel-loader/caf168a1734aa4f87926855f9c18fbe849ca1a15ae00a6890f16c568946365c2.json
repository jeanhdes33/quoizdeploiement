{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanh\\\\OneDrive\\\\Bureau\\\\quizz\\\\src\\\\components\\\\Categories\\\\Sports\\\\Football.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://opentdb.com/api.php?amount=10&category=21&difficulty=medium&type=multiple\";\nconst fetchQuestions = async () => {\n  try {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    if (!data.results) {\n      throw new Error('Failed to fetch questions');\n    }\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching questions:', error);\n    // Handle error gracefully, e.g., display an error message to the user\n    return []; // Return empty array to avoid rendering issues\n  }\n};\nconst Football = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setError(null); // Clear previous error\n      try {\n        const fetchedQuestions = await fetchQuestions();\n        setQuestions(fetchedQuestions);\n      } catch (error) {\n        setError(error.message); // Set error message for display\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleNewQuestion = async () => {\n    setIsLoading(true);\n    setError(null); // Clear previous error\n    try {\n      const fetchedQuestions = await fetchQuestions();\n      setQuestions(fetchedQuestions);\n    } catch (error) {\n      setError(error.message); // Set error message for display\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Football\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [question.question, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [question.incorrect_answers.map(answer => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: answer\n          }, answer, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: question.correct_answer\n          }, question.correct_answer, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, question.question, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNewQuestion,\n      disabled: isLoading,\n      children: \"Nouvelle question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Football, \"qjoYhaaN/Naq6x+apcru0ejhyDM=\");\n_c = Football;\nexport default Football;\nvar _c;\n$RefreshReg$(_c, \"Football\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","fetchQuestions","response","fetch","data","json","results","Error","error","console","Football","_s","questions","setQuestions","isLoading","setIsLoading","setError","fetchData","fetchedQuestions","message","handleNewQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","question","incorrect_answers","answer","correct_answer","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jeanh/OneDrive/Bureau/quizz/src/components/Categories/Sports/Football.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst API_URL = \"https://opentdb.com/api.php?amount=10&category=21&difficulty=medium&type=multiple\";\r\n\r\nconst fetchQuestions = async () => {\r\n  try {\r\n    const response = await fetch(API_URL);\r\n    const data = await response.json();\r\n    if (!data.results) {\r\n      throw new Error('Failed to fetch questions');\r\n    }\r\n    return data.results;\r\n  } catch (error) {\r\n    console.error('Error fetching questions:', error);\r\n    // Handle error gracefully, e.g., display an error message to the user\r\n    return []; // Return empty array to avoid rendering issues\r\n  }\r\n};\r\n\r\nconst Football = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      setError(null); // Clear previous error\r\n      try {\r\n        const fetchedQuestions = await fetchQuestions();\r\n        setQuestions(fetchedQuestions);\r\n      } catch (error) {\r\n        setError(error.message); // Set error message for display\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleNewQuestion = async () => {\r\n    setIsLoading(true);\r\n    setError(null); // Clear previous error\r\n    try {\r\n      const fetchedQuestions = await fetchQuestions();\r\n      setQuestions(fetchedQuestions);\r\n    } catch (error) {\r\n      setError(error.message); // Set error message for display\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Football</h1>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {isLoading ? (\r\n        <p>Loading questions...</p>\r\n      ) : (\r\n        <ul>\r\n          {questions.map((question) => (\r\n            <li key={question.question}>\r\n              {question.question}\r\n              <ul>\r\n                {question.incorrect_answers.map((answer) => (\r\n                  <li key={answer}>{answer}</li>\r\n                ))}\r\n                <li key={question.correct_answer}>{question.correct_answer}</li>\r\n              </ul>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <button onClick={handleNewQuestion} disabled={isLoading}>\r\n        Nouvelle question\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Football;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}