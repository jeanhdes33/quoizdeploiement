{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanh\\\\OneDrive\\\\Bureau\\\\quizz - Copie - Copie\\\\client\\\\src\\\\components\\\\Categories\\\\Sports\\\\Football.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Football() {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [quizComplete, setQuizComplete] = useState(false);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [questionsAsked, setQuestionsAsked] = useState(0);\n  const questionsThreshold = 5; // Nombre de questions avant de basculer\n\n  useEffect(() => {\n    fetchFootballQuestion();\n  }, []);\n  const fetchFootballQuestion = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/questions/football/random');\n      setQuestion(response.data);\n    } catch (error) {\n      console.error('Erreur lors de la récupération de la question de football :', error);\n    }\n  };\n  const handleAnswerButtonClick = selectedOptionIndex => {\n    const isCorrect = selectedOptionIndex === question.correctOptionIndex;\n    const updatedScore = isCorrect ? score + timeLeft : score;\n    setScore(updatedScore);\n    if (isCorrect) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n    setQuestionsAsked(questionsAsked + 1); // Incrémenter le compteur de questions posées\n    setQuizComplete(true); // Marquer le quiz comme complet\n\n    setTimeout(() => {\n      if (questionsAsked < questionsThreshold) {\n        fetchFootballQuestion(); // Charger une nouvelle question après avoir répondu\n        setTimeLeft(10); // Réinitialiser le temps pour la prochaine question\n        setQuizComplete(false); // Réinitialiser le quiz\n      } else {\n        // Basculer une fois que le seuil de questions est atteint\n        // Vous pouvez ajouter ici le code pour basculer vers une autre page ou afficher le score final\n        console.log('Quiz terminé');\n      }\n    }, 1000);\n  };\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section tertiary-bg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count white\",\n          children: \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"question\",\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerButtonClick(index),\n          className: quizComplete && index === question.correctOptionIndex ? 'correct' : quizComplete && index !== question.correctOptionIndex ? 'incorrect' : '',\n          disabled: quizComplete // Désactiver les boutons après la réponse\n          ,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-left\",\n        children: [\"Temps restant : \", timeLeft, \" secondes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Football, \"hn3mCZO4IxfGf9J5LqxIcTYnro8=\");\n_c = Football;\nexport default Football;\nvar _c;\n$RefreshReg$(_c, \"Football\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Football","_s","question","setQuestion","quizComplete","setQuizComplete","score","setScore","correctAnswers","setCorrectAnswers","timeLeft","setTimeLeft","questionsAsked","setQuestionsAsked","questionsThreshold","fetchFootballQuestion","response","get","data","error","console","handleAnswerButtonClick","selectedOptionIndex","isCorrect","correctOptionIndex","updatedScore","setTimeout","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","map","option","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jeanh/OneDrive/Bureau/quizz - Copie - Copie/client/src/components/Categories/Sports/Football.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Football() {\r\n  const [question, setQuestion] = useState(null);\r\n  const [quizComplete, setQuizComplete] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(10);\r\n  const [questionsAsked, setQuestionsAsked] = useState(0);\r\n  const questionsThreshold = 5; // Nombre de questions avant de basculer\r\n\r\n  useEffect(() => {\r\n    fetchFootballQuestion();\r\n  }, []);\r\n\r\n  const fetchFootballQuestion = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/questions/football/random');\r\n      setQuestion(response.data);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération de la question de football :', error);\r\n    }\r\n  };\r\n\r\n  const handleAnswerButtonClick = (selectedOptionIndex) => {\r\n    const isCorrect = selectedOptionIndex === question.correctOptionIndex;\r\n    const updatedScore = isCorrect ? score + timeLeft : score;\r\n    setScore(updatedScore);\r\n    if (isCorrect) {\r\n      setCorrectAnswers(correctAnswers + 1);\r\n    }\r\n    setQuestionsAsked(questionsAsked + 1); // Incrémenter le compteur de questions posées\r\n    setQuizComplete(true); // Marquer le quiz comme complet\r\n\r\n    setTimeout(() => {\r\n      if (questionsAsked < questionsThreshold) {\r\n        fetchFootballQuestion(); // Charger une nouvelle question après avoir répondu\r\n        setTimeLeft(10); // Réinitialiser le temps pour la prochaine question\r\n        setQuizComplete(false); // Réinitialiser le quiz\r\n      } else {\r\n        // Basculer une fois que le seuil de questions est atteint\r\n        // Vous pouvez ajouter ici le code pour basculer vers une autre page ou afficher le score final\r\n        console.log('Quiz terminé');\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  if (!question) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      <div className=\"quiz-content\">\r\n        <div className=\"question-section tertiary-bg\">\r\n          <div className=\"question-count white\">\r\n            Question\r\n          </div>\r\n          <div className=\"question-text\">\r\n            <h2 className=\"question\">{question.question}</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"answer-section\">\r\n          {question.options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => handleAnswerButtonClick(index)}\r\n              className={quizComplete && index === question.correctOptionIndex ? 'correct' : quizComplete && index !== question.correctOptionIndex ? 'incorrect' : ''}\r\n              disabled={quizComplete} // Désactiver les boutons après la réponse\r\n            >\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className=\"time-left\">\r\n          Temps restant : {timeLeft} secondes\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Football;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}