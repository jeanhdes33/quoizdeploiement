{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jwtDecode}from'jwt-decode';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Cinema(){const initialScore=parseInt(localStorage.getItem('score'))||0;const[question,setQuestion]=useState(null);const[quizComplete,setQuizComplete]=useState(false);const[score,setScore]=useState(initialScore);const[correctAnswers,setCorrectAnswers]=useState(0);const[timeLeft,setTimeLeft]=useState(10);const[questionCount,setQuestionCount]=useState(0);const[answered,setAnswered]=useState(false);const[disableButtons,setDisableButtons]=useState(false);const[answeredQuestions,setAnsweredQuestions]=useState([]);useEffect(()=>{fetchCinemaQuestion();},[]);useEffect(()=>{let timer;if(timeLeft>0&&!quizComplete){timer=setTimeout(()=>{setTimeLeft(timeLeft-1);},1000);}else if(timeLeft===0&&!answered){handleAnswerButtonClick(-1);}return()=>clearTimeout(timer);},[timeLeft,quizComplete,answered]);const fetchCinemaQuestion=async()=>{try{const response=await axios.get('http://localhost:8000/questions/cinema/random');const newQuestion=response.data;// Vérifie si la nouvelle question est déjà dans la liste des questions posées\nif(answeredQuestions.some(q=>q._id===newQuestion._id)){// Si la question est déjà posée, récupère une nouvelle question\nfetchCinemaQuestion();}else{// Si la question est nouvelle, l'ajoute à la liste des questions posées\nsetQuestion(newQuestion);setTimeLeft(10);setAnswered(false);setDisableButtons(false);setAnsweredQuestions([...answeredQuestions,newQuestion]);}}catch(error){console.error('Erreur lors de la récupération de la question de cinéma :',error);}};const handleAnswerButtonClick=async selectedOptionIndex=>{if(!question){return;// Exit early if question is null\n}const isCorrect=selectedOptionIndex===question.correctOptionIndex;let updatedScore=score;if(isCorrect){updatedScore+=5+timeLeft;setCorrectAnswers(correctAnswers+1);}else if(selectedOptionIndex!==-1){updatedScore-=5;}else{updatedScore-=10;}setScore(updatedScore);setAnswered(true);setDisableButtons(true);localStorage.setItem('score',updatedScore);try{const token=localStorage.getItem('token');const decodedToken=jwtDecode(token);const userId=decodedToken.id;const response=await axios.post('http://localhost:8000/update-score',{userId:userId,newScore:updatedScore});console.log('Score mis à jour côté serveur:',response.data);}catch(error){console.error('Erreur lors de la mise à jour du score côté serveur:',error);}setTimeout(()=>{if(questionCount<4){fetchCinemaQuestion();setQuestionCount(questionCount+1);setDisableButtons(false);}else{console.log('Score final :',score);setQuizComplete(true);}},2000);};const shareOnTwitter=()=>{const shareUrl=\"https://twitter.com/intent/tweet?text=Mon%20nombre%20de%20bonnes%20r\\xE9ponses%20\\xE0%20Quoiz%20est%20de%20\".concat(correctAnswers,\"%20!%20Viens%20jouer%20!\");window.open(shareUrl,'_blank');};const shareOnFacebook=()=>{const shareUrl=\"https://www.facebook.com/sharer/sharer.php?u=https://example.com&quote=Mon%20nombre%20de%20bonnes%20r\\xE9ponses%20\\xE0%20Quoiz%20est%20de%20\".concat(correctAnswers,\"%20!%20Viens%20jouer%20!\");window.open(shareUrl,'_blank');};return/*#__PURE__*/_jsx(\"div\",{className:\"quiz-container flex justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"quiz\",children:/*#__PURE__*/_jsx(\"div\",{className:\"quiz-content\",style:{maxWidth:'100%',width:'100%'},children:quizComplete?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"question-section tertiary-bg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"question\",children:\"Quiz complet\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"answer-section\",style:{opacity:quizComplete?1:0,transition:'opacity 1s ease'},children:[/*#__PURE__*/_jsx(\"button\",{style:{textAlign:'center',cursor:'default'},children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"Votre score global est : \",score]})}),/*#__PURE__*/_jsx(\"button\",{style:{textAlign:'center',cursor:'default'},children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"Nombre de bonnes r\\xE9ponses : \",correctAnswers,\" / 5\"]})}),/*#__PURE__*/_jsx(\"button\",{style:{textAlign:'center',cursor:'default'},children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"Pr\\xE9cision : \",(correctAnswers/5*100).toFixed(2),\"%\"]})}),/*#__PURE__*/_jsx(\"button\",{onClick:shareOnTwitter,className:\"question\",style:{backgroundColor:'transparent',border:'2px solid blue',color:'blue'},children:\"Partager sur Twitter\"}),/*#__PURE__*/_jsx(\"button\",{onClick:shareOnFacebook,className:\"button share\",style:{backgroundColor:'transparent',border:'2px solid blue',color:'blue'},children:\"Partager sur Facebook\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"share-buttons flex justify-center mt-4\"})]}):!question?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-section tertiary-bg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"question-count white\",children:\"Question\"}),/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"question\",children:question.question})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"answer-section\",children:question.options.map((option,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAnswerButtonClick(index),className:answered&&index===question.correctOptionIndex?'correct':answered&&index!==question.correctOptionIndex?'incorrect':'',disabled:answered||disableButtons,children:option},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"time-left\",children:[\"Temps restant : \",timeLeft,\" secondes\"]})]})})})});}export default Cinema;","map":{"version":3,"names":["React","useState","useEffect","axios","jwtDecode","jsx","_jsx","jsxs","_jsxs","Cinema","initialScore","parseInt","localStorage","getItem","question","setQuestion","quizComplete","setQuizComplete","score","setScore","correctAnswers","setCorrectAnswers","timeLeft","setTimeLeft","questionCount","setQuestionCount","answered","setAnswered","disableButtons","setDisableButtons","answeredQuestions","setAnsweredQuestions","fetchCinemaQuestion","timer","setTimeout","handleAnswerButtonClick","clearTimeout","response","get","newQuestion","data","some","q","_id","error","console","selectedOptionIndex","isCorrect","correctOptionIndex","updatedScore","setItem","token","decodedToken","userId","id","post","newScore","log","shareOnTwitter","shareUrl","concat","window","open","shareOnFacebook","className","children","style","maxWidth","width","opacity","transition","textAlign","cursor","toFixed","onClick","backgroundColor","border","color","options","map","option","index","disabled"],"sources":["C:/Users/jeanh/OneDrive/Bureau/quizz - Copie - Copie - Copie - Copie - Copie/server/client/src/components/Categories/Cinema.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction Cinema() {\r\n  const initialScore = parseInt(localStorage.getItem('score')) || 0;\r\n  const [question, setQuestion] = useState(null);\r\n  const [quizComplete, setQuizComplete] = useState(false);\r\n  const [score, setScore] = useState(initialScore);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(10);\r\n  const [questionCount, setQuestionCount] = useState(0);\r\n  const [answered, setAnswered] = useState(false);\r\n  const [disableButtons, setDisableButtons] = useState(false);\r\n  const [answeredQuestions, setAnsweredQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCinemaQuestion();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (timeLeft > 0 && !quizComplete) {\r\n      timer = setTimeout(() => {\r\n        setTimeLeft(timeLeft - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0 && !answered) {\r\n      handleAnswerButtonClick(-1);\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [timeLeft, quizComplete, answered]);\r\n\r\n  const fetchCinemaQuestion = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/questions/cinema/random');\r\n      const newQuestion = response.data;\r\n\r\n      // Vérifie si la nouvelle question est déjà dans la liste des questions posées\r\n      if (answeredQuestions.some(q => q._id === newQuestion._id)) {\r\n        // Si la question est déjà posée, récupère une nouvelle question\r\n        fetchCinemaQuestion();\r\n      } else {\r\n        // Si la question est nouvelle, l'ajoute à la liste des questions posées\r\n        setQuestion(newQuestion);\r\n        setTimeLeft(10);\r\n        setAnswered(false);\r\n        setDisableButtons(false);\r\n        setAnsweredQuestions([...answeredQuestions, newQuestion]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération de la question de cinéma :', error);\r\n    }\r\n  };\r\n\r\n  const handleAnswerButtonClick = async (selectedOptionIndex) => {\r\n    if (!question) {\r\n      return; // Exit early if question is null\r\n    }\r\n    \r\n    const isCorrect = selectedOptionIndex === question.correctOptionIndex;\r\n    let updatedScore = score;\r\n    if (isCorrect) {\r\n      updatedScore += 5 + timeLeft;\r\n      setCorrectAnswers(correctAnswers + 1);\r\n    } else if (selectedOptionIndex !== -1) {\r\n      updatedScore -= 5;\r\n    } else {\r\n      updatedScore -= 10;\r\n    }\r\n    setScore(updatedScore);\r\n    setAnswered(true);\r\n    setDisableButtons(true);\r\n    localStorage.setItem('score', updatedScore);\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const decodedToken = jwtDecode(token);\r\n      const userId = decodedToken.id;\r\n      const response = await axios.post('http://localhost:8000/update-score', { userId: userId, newScore: updatedScore });\r\n      console.log('Score mis à jour côté serveur:', response.data);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour du score côté serveur:', error);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (questionCount < 4) {\r\n        fetchCinemaQuestion();\r\n        setQuestionCount(questionCount + 1);\r\n        setDisableButtons(false);\r\n      } else {\r\n        console.log('Score final :', score);\r\n        setQuizComplete(true);\r\n      }\r\n    }, 2000);\r\n  };\r\n\r\n  const shareOnTwitter = () => {\r\n    const shareUrl = `https://twitter.com/intent/tweet?text=Mon%20nombre%20de%20bonnes%20réponses%20à%20Quoiz%20est%20de%20${correctAnswers}%20!%20Viens%20jouer%20!`;\r\n    window.open(shareUrl, '_blank');\r\n  };\r\n\r\n  const shareOnFacebook = () => {\r\n    const shareUrl = `https://www.facebook.com/sharer/sharer.php?u=https://example.com&quote=Mon%20nombre%20de%20bonnes%20réponses%20à%20Quoiz%20est%20de%20${correctAnswers}%20!%20Viens%20jouer%20!`;\r\n    window.open(shareUrl, '_blank');\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container flex justify-center\">\r\n      <div className=\"quiz\">\r\n        <div className=\"quiz-content\" style={{ maxWidth: '100%', width: '100%' }}>\r\n          {quizComplete ? (\r\n            <div>\r\n              <div className=\"question-section tertiary-bg\">\r\n                <div className=\"question-text\">\r\n                  <h2 className=\"question\">Quiz complet</h2>\r\n                </div>\r\n              </div>\r\n              <div className=\"answer-section\" style={{ opacity: quizComplete ? 1 : 0, transition: 'opacity 1s ease' }}>\r\n                <button style={{ textAlign: 'center', cursor: 'default' }}><strong>Votre score global est : {score}</strong></button>\r\n                <button style={{ textAlign: 'center', cursor: 'default' }}><strong>Nombre de bonnes réponses : {correctAnswers} / 5</strong></button>\r\n                <button style={{ textAlign: 'center', cursor: 'default' }}><strong>Précision : {((correctAnswers / 5) * 100).toFixed(2)}%</strong></button>\r\n                <button onClick={shareOnTwitter} className=\"question\" style={{backgroundColor: 'transparent', border: '2px solid blue', color: 'blue'}}>Partager sur Twitter</button>\r\n                <button onClick={shareOnFacebook} className=\"button share\" style={{backgroundColor: 'transparent', border: '2px solid blue', color: 'blue'}}>Partager sur Facebook</button>\r\n              </div>\r\n              <div className=\"share-buttons flex justify-center mt-4\"></div>\r\n            </div>\r\n          ) : !question ? (\r\n            <div className=\"loading\">Loading...</div>\r\n          ) : (\r\n            <div>\r\n              <div className=\"question-section tertiary-bg\">\r\n                <div className=\"question-count white\">Question</div>\r\n                <div className=\"question-text\">\r\n                  <h2 className=\"question\">{question.question}</h2>\r\n                </div>\r\n              </div>\r\n              <div className=\"answer-section\">\r\n                {question.options.map((option, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => handleAnswerButtonClick(index)}\r\n                    className={answered && index === question.correctOptionIndex ? 'correct' : answered && index !== question.correctOptionIndex ? 'incorrect' : ''}\r\n                    disabled={answered || disableButtons}\r\n                  >\r\n                    {option}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              <div className=\"time-left\">Temps restant : {timeLeft} secondes</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cinema;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}