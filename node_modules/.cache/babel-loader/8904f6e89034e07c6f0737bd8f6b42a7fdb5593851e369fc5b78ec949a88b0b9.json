{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanh\\\\OneDrive\\\\Bureau\\\\quizz - Copie - Copie - Copie\\\\client\\\\src\\\\components\\\\Categories\\\\Sports\\\\Football.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Football() {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [quizComplete, setQuizComplete] = useState(false);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [answered, setAnswered] = useState(false);\n  const [jwt, setJwt] = useState('');\n  useEffect(() => {\n    fetchFootballQuestion();\n    const token = localStorage.getItem('token');\n    if (token) {\n      setJwt(token);\n    }\n  }, []);\n  useEffect(() => {\n    let timer;\n    if (timeLeft > 0 && !quizComplete) {\n      timer = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n    } else if (timeLeft === 0 && !answered) {\n      handleAnswerButtonClick(-1); // Si le temps est écoulé et que l'utilisateur n'a pas répondu, réduire le score de 5 points\n    }\n    return () => clearTimeout(timer);\n  }, [timeLeft, quizComplete, answered]);\n  const fetchFootballQuestion = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/questions/football/random');\n      setQuestion(response.data);\n      setTimeLeft(10);\n      setAnswered(false); // Réinitialiser l'état de réponse à chaque nouvelle question\n    } catch (error) {\n      console.error('Erreur lors de la récupération de la question de football :', error);\n    }\n  };\n  const handleAnswerButtonClick = async selectedOptionIndex => {\n    const isCorrect = selectedOptionIndex === question.correctOptionIndex;\n    let updatedScore = score;\n    if (isCorrect) {\n      updatedScore += 5 + timeLeft; // Ajouter le temps restant en points si la réponse est correcte\n      setCorrectAnswers(correctAnswers + 1);\n    } else if (selectedOptionIndex !== -1) {\n      // Ne réduire le score que si l'utilisateur a répondu\n      updatedScore -= 1;\n    }\n    setScore(updatedScore);\n    setAnswered(true); // Marquer la question comme répondue\n\n    // Si l'utilisateur n'a pas répondu, réduire le score de 5 points\n    if (selectedOptionIndex === -1) {\n      setScore(score - 5);\n    }\n\n    // Envoyer le score mis à jour vers le backend\n    try {\n      const userId = localStorage.getItem('userId'); // Récupérer l'ID de l'utilisateur depuis le local storage\n      await axios.post('http://localhost:8000/update-score', {\n        userId,\n        newScore: updatedScore\n      }); // Envoyer l'ID de l'utilisateur avec le score mis à jour\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du score sur le backend :', error);\n    }\n    setTimeout(() => {\n      if (questionCount < 4) {\n        // Arrêter le quiz après 5 questions\n        fetchFootballQuestion(); // Charger une nouvelle question après avoir répondu\n        setQuestionCount(questionCount + 1);\n      } else {\n        console.log('Score final :', updatedScore);\n        setQuizComplete(true); // Marquer le quiz comme terminé après la dernière question\n      }\n    }, 2000); // Délai avant de passer à la prochaine question\n  };\n  if (quizComplete) {\n    const totalQuestions = 5; // Nombre total de questions\n    const accuracy = correctAnswers / totalQuestions * 100; // Calcul de la précision\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz complet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Votre score final est : \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Nombre de bonnes r\\xE9ponses : \", correctAnswers, \" / \", totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Pr\\xE9cision : \", accuracy.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section tertiary-bg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count white\",\n          children: \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"question\",\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerButtonClick(index),\n          className: answered && index === question.correctOptionIndex ? 'correct' : answered && index !== question.correctOptionIndex ? 'incorrect' : '',\n          disabled: answered // Désactiver les boutons après avoir répondu\n          ,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-left\",\n        children: [\"Temps restant : \", timeLeft, \" secondes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Football, \"ha+ghKz0NH6yf5PLuWb0sl398x4=\");\n_c = Football;\nexport default Football;\nvar _c;\n$RefreshReg$(_c, \"Football\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Football","_s","question","setQuestion","quizComplete","setQuizComplete","score","setScore","correctAnswers","setCorrectAnswers","timeLeft","setTimeLeft","questionCount","setQuestionCount","answered","setAnswered","jwt","setJwt","fetchFootballQuestion","token","localStorage","getItem","timer","setTimeout","handleAnswerButtonClick","clearTimeout","response","get","data","error","console","selectedOptionIndex","isCorrect","correctOptionIndex","updatedScore","userId","post","newScore","log","totalQuestions","accuracy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","options","map","option","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jeanh/OneDrive/Bureau/quizz - Copie - Copie - Copie/client/src/components/Categories/Sports/Football.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Football() {\r\n  const [question, setQuestion] = useState(null);\r\n  const [quizComplete, setQuizComplete] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(10);\r\n  const [questionCount, setQuestionCount] = useState(0);\r\n  const [answered, setAnswered] = useState(false);\r\n  const [jwt, setJwt] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchFootballQuestion();\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setJwt(token);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (timeLeft > 0 && !quizComplete) {\r\n      timer = setTimeout(() => {\r\n        setTimeLeft(timeLeft - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0 && !answered) {\r\n      handleAnswerButtonClick(-1); // Si le temps est écoulé et que l'utilisateur n'a pas répondu, réduire le score de 5 points\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [timeLeft, quizComplete, answered]);\r\n\r\n  const fetchFootballQuestion = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/questions/football/random');\r\n      setQuestion(response.data);\r\n      setTimeLeft(10);\r\n      setAnswered(false); // Réinitialiser l'état de réponse à chaque nouvelle question\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération de la question de football :', error);\r\n    }\r\n  };\r\n\r\n  const handleAnswerButtonClick = async (selectedOptionIndex) => {\r\n    const isCorrect = selectedOptionIndex === question.correctOptionIndex;\r\n    let updatedScore = score;\r\n    if (isCorrect) {\r\n      updatedScore += 5 + timeLeft; // Ajouter le temps restant en points si la réponse est correcte\r\n      setCorrectAnswers(correctAnswers + 1);\r\n    } else if (selectedOptionIndex !== -1) { // Ne réduire le score que si l'utilisateur a répondu\r\n      updatedScore -= 1;\r\n    }\r\n    setScore(updatedScore);\r\n    setAnswered(true); // Marquer la question comme répondue\r\n\r\n    // Si l'utilisateur n'a pas répondu, réduire le score de 5 points\r\n    if (selectedOptionIndex === -1) {\r\n      setScore(score - 5);\r\n    }\r\n\r\n    // Envoyer le score mis à jour vers le backend\r\n    try {\r\n      const userId = localStorage.getItem('userId'); // Récupérer l'ID de l'utilisateur depuis le local storage\r\n      await axios.post('http://localhost:8000/update-score', { userId, newScore: updatedScore }); // Envoyer l'ID de l'utilisateur avec le score mis à jour\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour du score sur le backend :', error);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (questionCount < 4) { // Arrêter le quiz après 5 questions\r\n        fetchFootballQuestion(); // Charger une nouvelle question après avoir répondu\r\n        setQuestionCount(questionCount + 1);\r\n      } else {\r\n        console.log('Score final :', updatedScore);\r\n        setQuizComplete(true); // Marquer le quiz comme terminé après la dernière question\r\n      }\r\n    }, 2000); // Délai avant de passer à la prochaine question\r\n  };\r\n\r\n  if (quizComplete) {\r\n    const totalQuestions = 5; // Nombre total de questions\r\n    const accuracy = (correctAnswers / totalQuestions) * 100; // Calcul de la précision\r\n    return (\r\n      <div className=\"quiz\">\r\n        <h1>Quiz complet</h1>\r\n        <h2>Votre score final est : {score}</h2>\r\n        <h2>Nombre de bonnes réponses : {correctAnswers} / {totalQuestions}</h2>\r\n        <h2>Précision : {accuracy.toFixed(2)}%</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!question) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      <div className=\"quiz-content\">\r\n        <div className=\"question-section tertiary-bg\">\r\n          <div className=\"question-count white\">\r\n            Question\r\n          </div>\r\n          <div className=\"question-text\">\r\n            <h2 className=\"question\">{question.question}</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"answer-section\">\r\n          {question.options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => handleAnswerButtonClick(index)}\r\n              className={answered && index === question.correctOptionIndex ? 'correct' : answered && index !== question.correctOptionIndex ? 'incorrect' : ''}\r\n              disabled={answered} // Désactiver les boutons après avoir répondu\r\n            >\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className=\"time-left\">\r\n          Temps restant : {timeLeft} secondes\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Football;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}