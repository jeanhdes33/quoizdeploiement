{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanh\\\\OneDrive\\\\Bureau\\\\quizz\\\\src\\\\components\\\\Categories\\\\Sports\\\\Football.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Football() {\n  _s();\n  const initialQuestions = [{\n    id: 1,\n    question: \"Quelle équipe a remporté le premier championnat du monde de football en 1930 ?\",\n    options: [\"Uruguay\", \"Brésil\", \"Allemagne\", \"Italie\"],\n    answer: \"Uruguay\"\n  }\n  // Ajoutez les autres questions ici\n  ];\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0); // Score actuel du quiz en cours\n  const [totalScore, setTotalScore] = useState(() => {\n    // Chargement du score total depuis le stockage local au chargement initial de la page\n    const savedTotalScore = localStorage.getItem('footballTotalScore');\n    return savedTotalScore ? parseInt(savedTotalScore, 10) : 0;\n  });\n  const [showScore, setShowScore] = useState(false);\n  useEffect(() => {\n    // Mélanger les questions lors de leur chargement initial\n    const shuffledQuestions = shuffleArray(initialQuestions);\n    setQuestions(shuffledQuestions);\n  }, []);\n  useEffect(() => {\n    // Sauvegarde du score total dans le stockage local à chaque changement\n    localStorage.setItem('footballTotalScore', totalScore.toString());\n  }, [totalScore]);\n  const shuffleArray = array => {\n    // Algorithme de mélange de Fisher-Yates\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  const handleAnswerButtonClick = selectedOption => {\n    if (selectedOption === questions[currentQuestion].answer) {\n      setCurrentScore(currentScore + 10); // Ajoute 10 points pour une réponse correcte\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      // Mettre à jour le score total à la fin du quiz\n      setTotalScore(totalScore + currentScore);\n      setShowScore(true);\n    }\n  };\n  const currentQuestionData = currentQuestion < questions.length ? questions[currentQuestion] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section tertiary-bg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count white\",\n          children: [\"Question \", currentQuestion + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"question\",\n            children: currentQuestionData ? currentQuestionData.question : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: currentQuestionData && currentQuestionData.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerButtonClick(option),\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section white-bg\",\n      children: [\"Score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"white\",\n        children: currentScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-final tertiary-bg white\",\n      children: [\"Score total: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"white\",\n        children: totalScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 24\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Football, \"+tQvmIw4naNUDNSw8Jci9mIpXhY=\");\n_c = Football;\nexport default Football;\nvar _c;\n$RefreshReg$(_c, \"Football\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Football","_s","initialQuestions","id","question","options","answer","questions","setQuestions","currentQuestion","setCurrentQuestion","currentScore","setCurrentScore","totalScore","setTotalScore","savedTotalScore","localStorage","getItem","parseInt","showScore","setShowScore","shuffledQuestions","shuffleArray","setItem","toString","array","i","length","j","Math","floor","random","handleAnswerButtonClick","selectedOption","nextQuestion","currentQuestionData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jeanh/OneDrive/Bureau/quizz/src/components/Categories/Sports/Football.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Football() {\r\n  const initialQuestions = [\r\n    {\r\n      id: 1,\r\n      question: \"Quelle équipe a remporté le premier championnat du monde de football en 1930 ?\",\r\n      options: [\"Uruguay\", \"Brésil\", \"Allemagne\", \"Italie\"],\r\n      answer: \"Uruguay\"\r\n    },\r\n    // Ajoutez les autres questions ici\r\n  ];\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [currentScore, setCurrentScore] = useState(0); // Score actuel du quiz en cours\r\n  const [totalScore, setTotalScore] = useState(() => {\r\n    // Chargement du score total depuis le stockage local au chargement initial de la page\r\n    const savedTotalScore = localStorage.getItem('footballTotalScore');\r\n    return savedTotalScore ? parseInt(savedTotalScore, 10) : 0;\r\n  });\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Mélanger les questions lors de leur chargement initial\r\n    const shuffledQuestions = shuffleArray(initialQuestions);\r\n    setQuestions(shuffledQuestions);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Sauvegarde du score total dans le stockage local à chaque changement\r\n    localStorage.setItem('footballTotalScore', totalScore.toString());\r\n  }, [totalScore]);\r\n\r\n  const shuffleArray = (array) => {\r\n    // Algorithme de mélange de Fisher-Yates\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const handleAnswerButtonClick = (selectedOption) => {\r\n    if (selectedOption === questions[currentQuestion].answer) {\r\n      setCurrentScore(currentScore + 10); // Ajoute 10 points pour une réponse correcte\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      // Mettre à jour le score total à la fin du quiz\r\n      setTotalScore(totalScore + currentScore);\r\n      setShowScore(true);\r\n    }\r\n  };\r\n\r\n  const currentQuestionData = currentQuestion < questions.length ? questions[currentQuestion] : null;\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      <div className=\"quiz-content\">\r\n        <div className=\"question-section tertiary-bg\">\r\n          <div className=\"question-count white\">\r\n            Question {currentQuestion + 1}\r\n          </div>\r\n          <div className=\"question-text\">\r\n            <h2 className=\"question\">{currentQuestionData ? currentQuestionData.question : ''}</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"answer-section\">\r\n          {currentQuestionData && currentQuestionData.options.map((option) => (\r\n            <button key={option} onClick={() => handleAnswerButtonClick(option)}>{option}</button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"score-section white-bg\">\r\n        Score: <span className=\"white\">{currentScore}</span> {/* Affiche le score actuel */}\r\n      </div>\r\n      {showScore && (\r\n        <div className=\"score-final tertiary-bg white\">\r\n          Score total: <span className=\"white\">{totalScore}</span> {/* Affiche le score total */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Football;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}