{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanh\\\\OneDrive\\\\Bureau\\\\quizz\\\\src\\\\components\\\\Categories\\\\Sports\\\\Football.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Football() {\n  _s();\n  const initialQuestions = [{\n    id: 1,\n    question: \"Quelle équipe a remporté le premier championnat du monde de football en 1930 ?\",\n    options: [\"Uruguay\", \"Brésil\", \"Allemagne\", \"Italie\"],\n    answer: \"Uruguay\"\n  }, {\n    id: 2,\n    question: \"Qui a remporté le Ballon d'Or 2020 ?\",\n    options: [\"Lionel Messi\", \"Robert Lewandowski\", \"Cristiano Ronaldo\", \"Virgil van Dijk\"],\n    answer: \"Robert Lewandowski\"\n  }, {\n    id: 3,\n    question: \"Quel joueur a marqué le plus de buts en Coupe du Monde de la FIFA de tous les temps ?\",\n    options: [\"Miroslav Klose\", \"Pele\", \"Cristiano Ronaldo\", \"Lionel Messi\"],\n    answer: \"Miroslav Klose\"\n  }, {\n    id: 4,\n    question: \"Dans quel stade s'est déroulée la finale de la Coupe du Monde de la FIFA 2018 ?\",\n    options: [\"Stade Loujniki\", \"Stade de France\", \"Wembley Stadium\", \"Maracanã\"],\n    answer: \"Stade Loujniki\"\n  }, {\n    id: 5,\n    question: \"Quelle équipe a remporté le plus de titres de Premier League en Angleterre ?\",\n    options: [\"Manchester United\", \"Liverpool\", \"Chelsea\", \"Arsenal\"],\n    answer: \"Manchester United\"\n  },\n  // Ajouter d'autres questions ici...\n  {\n    id: 20,\n    question: \"Dans quelle ville se trouve le siège de la FIFA ?\",\n    options: [\"Zurich\", \"Genève\", \"Lausanne\", \"Bern\"],\n    answer: \"Zurich\"\n  }];\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [initialTotalScore, setInitialTotalScore] = useState(0);\n  useEffect(() => {\n    const shuffledQuestions = shuffleArray(initialQuestions).slice(0, 10).map(question => ({\n      ...question,\n      options: shuffleArray(question.options)\n    }));\n    setQuestions(shuffledQuestions);\n\n    // Calcule le score total initial\n    const initialTotalScore = shuffledQuestions.reduce((acc, question) => {\n      return question.answer === question.options[0] ? acc + 10 : acc;\n    }, 0);\n    setTotalScore(initialTotalScore);\n    setInitialTotalScore(initialTotalScore);\n  }, []);\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  const handleAnswerButtonClick = selectedOption => {\n    const isCorrect = selectedOption === questions[currentQuestion].answer;\n    if (isCorrect) {\n      setScore(score + 10);\n      setTotalScore(totalScore + 10);\n    }\n    const updatedQuestions = questions.map((question, index) => {\n      if (index === currentQuestion) {\n        return {\n          ...question,\n          selectedOption,\n          isCorrect\n        };\n      } else {\n        return question;\n      }\n    });\n    setQuestions(updatedQuestions);\n    setTimeout(() => {\n      const nextQuestion = currentQuestion + 1;\n      if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n      } else {\n        setShowScore(true);\n      }\n    }, 1000);\n  };\n  const currentQuestionData = currentQuestion < questions.length ? questions[currentQuestion] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section tertiary-bg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count white\",\n          children: [\"Question \", currentQuestion + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"question\",\n            children: currentQuestionData ? currentQuestionData.question : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: currentQuestionData && currentQuestionData.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerButtonClick(option),\n          className: currentQuestionData.selectedOption && (option === currentQuestionData.answer ? 'correct' : 'incorrect'),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section white-bg\",\n      children: [\"Score actuel: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"white\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-final tertiary-bg white\",\n      children: [\"Score total: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"white\",\n        children: totalScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(Football, \"NqJxT5DdbI96NZyZxKPBjxLoCTQ=\");\n_c = Football;\nexport default Football;\nvar _c;\n$RefreshReg$(_c, \"Football\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Football","_s","initialQuestions","id","question","options","answer","questions","setQuestions","currentQuestion","setCurrentQuestion","score","setScore","totalScore","setTotalScore","showScore","setShowScore","initialTotalScore","setInitialTotalScore","shuffledQuestions","shuffleArray","slice","map","reduce","acc","array","i","length","j","Math","floor","random","handleAnswerButtonClick","selectedOption","isCorrect","updatedQuestions","index","setTimeout","nextQuestion","currentQuestionData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jeanh/OneDrive/Bureau/quizz/src/components/Categories/Sports/Football.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Football() {\r\n  const initialQuestions = [\r\n    {\r\n      id: 1,\r\n      question: \"Quelle équipe a remporté le premier championnat du monde de football en 1930 ?\",\r\n      options: [\"Uruguay\", \"Brésil\", \"Allemagne\", \"Italie\"],\r\n      answer: \"Uruguay\"\r\n    },\r\n    {\r\n      id: 2,\r\n      question: \"Qui a remporté le Ballon d'Or 2020 ?\",\r\n      options: [\"Lionel Messi\", \"Robert Lewandowski\", \"Cristiano Ronaldo\", \"Virgil van Dijk\"],\r\n      answer: \"Robert Lewandowski\"\r\n    },\r\n    {\r\n      id: 3,\r\n      question: \"Quel joueur a marqué le plus de buts en Coupe du Monde de la FIFA de tous les temps ?\",\r\n      options: [\"Miroslav Klose\", \"Pele\", \"Cristiano Ronaldo\", \"Lionel Messi\"],\r\n      answer: \"Miroslav Klose\"\r\n    },\r\n    {\r\n      id: 4,\r\n      question: \"Dans quel stade s'est déroulée la finale de la Coupe du Monde de la FIFA 2018 ?\",\r\n      options: [\"Stade Loujniki\", \"Stade de France\", \"Wembley Stadium\", \"Maracanã\"],\r\n      answer: \"Stade Loujniki\"\r\n    },\r\n    {\r\n      id: 5,\r\n      question: \"Quelle équipe a remporté le plus de titres de Premier League en Angleterre ?\",\r\n      options: [\"Manchester United\", \"Liverpool\", \"Chelsea\", \"Arsenal\"],\r\n      answer: \"Manchester United\"\r\n    },\r\n    // Ajouter d'autres questions ici...\r\n    {\r\n      id: 20,\r\n      question: \"Dans quelle ville se trouve le siège de la FIFA ?\",\r\n      options: [\"Zurich\", \"Genève\", \"Lausanne\", \"Bern\"],\r\n      answer: \"Zurich\"\r\n    },\r\n  ];\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [initialTotalScore, setInitialTotalScore] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const shuffledQuestions = shuffleArray(initialQuestions).slice(0, 10).map(question => ({\r\n      ...question,\r\n      options: shuffleArray(question.options)\r\n    }));\r\n    setQuestions(shuffledQuestions);\r\n\r\n    // Calcule le score total initial\r\n    const initialTotalScore = shuffledQuestions.reduce((acc, question) => {\r\n      return question.answer === question.options[0] ? acc + 10 : acc;\r\n    }, 0);\r\n    setTotalScore(initialTotalScore);\r\n    setInitialTotalScore(initialTotalScore);\r\n  }, []);\r\n\r\n  const shuffleArray = (array) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const handleAnswerButtonClick = (selectedOption) => {\r\n    const isCorrect = selectedOption === questions[currentQuestion].answer;\r\n    if (isCorrect) {\r\n      setScore(score + 10);\r\n      setTotalScore(totalScore + 10);\r\n    }\r\n\r\n    const updatedQuestions = questions.map((question, index) => {\r\n      if (index === currentQuestion) {\r\n        return { ...question, selectedOption, isCorrect };\r\n      } else {\r\n        return question;\r\n      }\r\n    });\r\n\r\n    setQuestions(updatedQuestions);\r\n\r\n    setTimeout(() => {\r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < questions.length) {\r\n        setCurrentQuestion(nextQuestion);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const currentQuestionData = currentQuestion < questions.length ? questions[currentQuestion] : null;\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      <div className=\"quiz-content\">\r\n        <div className=\"question-section tertiary-bg\">\r\n          <div className=\"question-count white\">\r\n            Question {currentQuestion + 1}\r\n          </div>\r\n          <div className=\"question-text\">\r\n            <h2 className=\"question\">{currentQuestionData ? currentQuestionData.question : ''}</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"answer-section\">\r\n          {currentQuestionData && currentQuestionData.options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => handleAnswerButtonClick(option)}\r\n              className={currentQuestionData.selectedOption && (option === currentQuestionData.answer ? 'correct' : 'incorrect')}\r\n            >\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"score-section white-bg\">\r\n        Score actuel: <span className=\"white\">{score}</span>\r\n      </div>\r\n      {showScore && (\r\n        <div className=\"score-final tertiary-bg white\">\r\n          Score total: <span className=\"white\">{totalScore}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Football;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}