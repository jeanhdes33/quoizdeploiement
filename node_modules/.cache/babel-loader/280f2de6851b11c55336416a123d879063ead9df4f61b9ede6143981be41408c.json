{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanh\\\\OneDrive\\\\Bureau\\\\quizz - Copie - Copie\\\\client\\\\src\\\\components\\\\Categories\\\\Sports\\\\Football.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Football() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [quizComplete, setQuizComplete] = useState(false);\n  const [score, setScore] = useState(() => {\n    const storedScore = localStorage.getItem('quizScore');\n    return storedScore ? parseInt(storedScore) : 0;\n  });\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/questions', {\n          params: {\n            category: 'Sports',\n            subCategory: 'Football'\n          }\n        });\n        const fetchedQuestions = response.data;\n        setQuestions(fetchedQuestions);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(prevTimeLeft => {\n        if (prevTimeLeft > 0) {\n          return prevTimeLeft - 1;\n        } else {\n          handleAnswerButtonClick(''); // Si le temps est écoulé, passer à la prochaine question\n          return 10; // Réinitialise le temps pour la prochaine question\n        }\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestion, timeLeft]); // On démarre le timer à chaque changement de question et à chaque décrémentation du temps restant\n\n  useEffect(() => {\n    localStorage.setItem('quizScore', score.toString());\n  }, [score]);\n  const handleAnswerButtonClick = selectedOption => {\n    const updatedQuestions = questions.map((question, index) => {\n      if (index === currentQuestion) {\n        const isCorrect = selectedOption === question.answer;\n        if (isCorrect) {\n          setCorrectAnswers(correctAnswers + 1);\n          setScore(prevScore => prevScore + timeLeft); // Augmenter le score en fonction du temps restant si la réponse est correcte\n        } else if (timeLeft === 0) {\n          // Vérifier si le temps est écoulé\n          setScore(prevScore => prevScore - 5); // Déduire 5 points du score\n        }\n        return {\n          ...question,\n          selectedOption,\n          isCorrect\n        };\n      } else {\n        return question;\n      }\n    });\n    setQuestions(updatedQuestions);\n    setTimeout(() => {\n      const nextQuestion = currentQuestion + 1;\n      if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n        setTimeLeft(10); // Réinitialiser le temps pour la prochaine question\n      } else {\n        setQuizComplete(true);\n      }\n    }, 1000);\n  };\n  const currentQuestionData = currentQuestion < questions.length ? questions[currentQuestion] : null;\n  if (quizComplete) {\n    const totalQuestions = questions.length;\n    const accuracy = correctAnswers / totalQuestions * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz complet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Votre score final est : \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Nombre de bonnes r\\xE9ponses : \", correctAnswers, \" / \", totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Pr\\xE9cision : \", accuracy.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section tertiary-bg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count white\",\n          children: [\"Question \", currentQuestion + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"question\",\n            children: currentQuestionData ? currentQuestionData.question : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: currentQuestionData && currentQuestionData.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerButtonClick(option),\n          className: currentQuestionData.selectedOption && (option === currentQuestionData.answer ? 'correct' : 'incorrect'),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-left\",\n        children: [\"Temps restant : \", timeLeft, \" secondes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(Football, \"MIidMi//OqSPl1saD73M7CcjNtU=\");\n_c = Football;\nexport default Football;\nvar _c;\n$RefreshReg$(_c, \"Football\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Football","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","quizComplete","setQuizComplete","score","setScore","storedScore","localStorage","getItem","parseInt","correctAnswers","setCorrectAnswers","timeLeft","setTimeLeft","fetchQuestions","response","get","params","category","subCategory","fetchedQuestions","data","error","console","timer","setInterval","prevTimeLeft","handleAnswerButtonClick","clearInterval","setItem","toString","selectedOption","updatedQuestions","map","question","index","isCorrect","answer","prevScore","setTimeout","nextQuestion","length","currentQuestionData","totalQuestions","accuracy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","options","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jeanh/OneDrive/Bureau/quizz - Copie - Copie/client/src/components/Categories/Sports/Football.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Football() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [quizComplete, setQuizComplete] = useState(false);\r\n  const [score, setScore] = useState(() => {\r\n    const storedScore = localStorage.getItem('quizScore');\r\n    return storedScore ? parseInt(storedScore) : 0;\r\n  });\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(10);\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/questions', {\r\n          params: {\r\n            category: 'Sports',\r\n            subCategory: 'Football'\r\n          }\r\n        });\r\n        const fetchedQuestions = response.data;\r\n        setQuestions(fetchedQuestions);\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeLeft(prevTimeLeft => {\r\n        if (prevTimeLeft > 0) {\r\n          return prevTimeLeft - 1;\r\n        } else {\r\n          handleAnswerButtonClick(''); // Si le temps est écoulé, passer à la prochaine question\r\n          return 10; // Réinitialise le temps pour la prochaine question\r\n        }\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [currentQuestion, timeLeft]); // On démarre le timer à chaque changement de question et à chaque décrémentation du temps restant\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('quizScore', score.toString());\r\n  }, [score]);\r\n\r\n  const handleAnswerButtonClick = (selectedOption) => {\r\n    const updatedQuestions = questions.map((question, index) => {\r\n      if (index === currentQuestion) {\r\n        const isCorrect = selectedOption === question.answer;\r\n        if (isCorrect) {\r\n          setCorrectAnswers(correctAnswers + 1);\r\n          setScore(prevScore => prevScore + timeLeft); // Augmenter le score en fonction du temps restant si la réponse est correcte\r\n        } else if (timeLeft === 0) { // Vérifier si le temps est écoulé\r\n          setScore(prevScore => prevScore - 5); // Déduire 5 points du score\r\n        }\r\n        return { ...question, selectedOption, isCorrect };\r\n      } else {\r\n        return question;\r\n      }\r\n    });\r\n\r\n    setQuestions(updatedQuestions);\r\n\r\n    setTimeout(() => {\r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < questions.length) {\r\n        setCurrentQuestion(nextQuestion);\r\n        setTimeLeft(10); // Réinitialiser le temps pour la prochaine question\r\n      } else {\r\n        setQuizComplete(true);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const currentQuestionData = currentQuestion < questions.length ? questions[currentQuestion] : null;\r\n\r\n  if (quizComplete) {\r\n    const totalQuestions = questions.length;\r\n    const accuracy = (correctAnswers / totalQuestions) * 100;\r\n    return (\r\n      <div className=\"quiz\">\r\n        <h1>Quiz complet</h1>\r\n        <h2>Votre score final est : {score}</h2>\r\n        <h2>Nombre de bonnes réponses : {correctAnswers} / {totalQuestions}</h2>\r\n        <h2>Précision : {accuracy.toFixed(2)}%</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      <div className=\"quiz-content\">\r\n        <div className=\"question-section tertiary-bg\">\r\n          <div className=\"question-count white\">\r\n            Question {currentQuestion + 1}\r\n          </div>\r\n          <div className=\"question-text\">\r\n            <h2 className=\"question\">{currentQuestionData ? currentQuestionData.question : ''}</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"answer-section\">\r\n          {currentQuestionData && currentQuestionData.options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => handleAnswerButtonClick(option)}\r\n              className={currentQuestionData.selectedOption && (option === currentQuestionData.answer ? 'correct' : 'incorrect')}\r\n            >\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className=\"time-left\">\r\n          Temps restant : {timeLeft} secondes\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Football;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}