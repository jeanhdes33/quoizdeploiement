{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanh\\\\OneDrive\\\\Bureau\\\\quizz - Copie - Copie\\\\client\\\\src\\\\components\\\\Categories\\\\Sports\\\\Football.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Football() {\n  _s();\n  const initialQuestions = [{\n    id: 1,\n    question: \"Quelle équipe a remporté le premier championnat du monde de football en 1930 ?\",\n    options: [\"Uruguay\", \"Brésil\", \"Allemagne\", \"Italie\"],\n    answer: \"Uruguay\"\n  }\n  // Ajoutez les autres questions ici\n  ];\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [quizComplete, setQuizComplete] = useState(false);\n  const [score, setScore] = useState(() => {\n    const storedScore = localStorage.getItem('quizScore');\n    return storedScore ? parseInt(storedScore) : 0;\n  });\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  useEffect(() => {\n    const shuffledQuestions = shuffleArray(initialQuestions).slice(0, 5).map(question => ({\n      ...question,\n      options: shuffleArray(question.options)\n    }));\n    setQuestions(shuffledQuestions);\n  }, []);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(prevTimeLeft => {\n        if (prevTimeLeft > 0) {\n          return prevTimeLeft - 1;\n        } else {\n          handleAnswerButtonClick('');\n          return 10;\n        }\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestion]);\n  useEffect(() => {\n    localStorage.setItem('quizScore', score.toString());\n  }, [score]);\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  const handleAnswerButtonClick = selectedOption => {\n    const updatedQuestions = questions.map((question, index) => {\n      if (index === currentQuestion) {\n        const isCorrect = selectedOption === question.answer;\n        if (isCorrect) {\n          setCorrectAnswers(correctAnswers + 1);\n          setScore(prevScore => prevScore + timeLeft);\n        }\n        return {\n          ...question,\n          selectedOption,\n          isCorrect\n        };\n      } else {\n        return question;\n      }\n    });\n    setQuestions(updatedQuestions);\n    setTimeout(() => {\n      const nextQuestion = currentQuestion + 1;\n      if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n        setTimeLeft(10);\n      } else {\n        setQuizComplete(true);\n      }\n    }, 1000);\n  };\n  const currentQuestionData = currentQuestion < questions.length ? questions[currentQuestion] : null;\n  if (quizComplete) {\n    const totalQuestions = questions.length;\n    const accuracy = correctAnswers / totalQuestions * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz complet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Votre score final est : \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Nombre de bonnes r\\xE9ponses : \", correctAnswers, \" / \", totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Pr\\xE9cision : \", accuracy.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section tertiary-bg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count white\",\n          children: [\"Question \", currentQuestion + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"question\",\n            children: currentQuestionData ? currentQuestionData.question : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: currentQuestionData && currentQuestionData.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerButtonClick(option),\n          className: currentQuestionData.selectedOption && (option === currentQuestionData.answer ? 'correct' : 'incorrect'),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-left blue\",\n        children: [\"Temps restant : \", timeLeft, \" secondes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(Football, \"MIidMi//OqSPl1saD73M7CcjNtU=\");\n_c = Football;\nexport default Football;\nvar _c;\n$RefreshReg$(_c, \"Football\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Football","_s","initialQuestions","id","question","options","answer","questions","setQuestions","currentQuestion","setCurrentQuestion","quizComplete","setQuizComplete","score","setScore","storedScore","localStorage","getItem","parseInt","correctAnswers","setCorrectAnswers","timeLeft","setTimeLeft","shuffledQuestions","shuffleArray","slice","map","timer","setInterval","prevTimeLeft","handleAnswerButtonClick","clearInterval","setItem","toString","array","i","length","j","Math","floor","random","selectedOption","updatedQuestions","index","isCorrect","prevScore","setTimeout","nextQuestion","currentQuestionData","totalQuestions","accuracy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jeanh/OneDrive/Bureau/quizz - Copie - Copie/client/src/components/Categories/Sports/Football.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Football() {\r\n  const initialQuestions = [\r\n    {\r\n      id: 1,\r\n      question: \"Quelle équipe a remporté le premier championnat du monde de football en 1930 ?\",\r\n      options: [\"Uruguay\", \"Brésil\", \"Allemagne\", \"Italie\"],\r\n      answer: \"Uruguay\"\r\n    },\r\n    // Ajoutez les autres questions ici\r\n  ];\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [quizComplete, setQuizComplete] = useState(false);\r\n  const [score, setScore] = useState(() => {\r\n    const storedScore = localStorage.getItem('quizScore');\r\n    return storedScore ? parseInt(storedScore) : 0;\r\n  });\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(10);\r\n\r\n  useEffect(() => {\r\n    const shuffledQuestions = shuffleArray(initialQuestions).slice(0, 5).map(question => ({\r\n      ...question,\r\n      options: shuffleArray(question.options)\r\n    }));\r\n    setQuestions(shuffledQuestions);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeLeft(prevTimeLeft => {\r\n        if (prevTimeLeft > 0) {\r\n          return prevTimeLeft - 1;\r\n        } else {\r\n          handleAnswerButtonClick(''); \r\n          return 10; \r\n        }\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [currentQuestion]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('quizScore', score.toString());\r\n  }, [score]);\r\n\r\n  const shuffleArray = (array) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const handleAnswerButtonClick = (selectedOption) => {\r\n    const updatedQuestions = questions.map((question, index) => {\r\n      if (index === currentQuestion) {\r\n        const isCorrect = selectedOption === question.answer;\r\n        if (isCorrect) {\r\n          setCorrectAnswers(correctAnswers + 1);\r\n          setScore(prevScore => prevScore + timeLeft);\r\n        }\r\n        return { ...question, selectedOption, isCorrect };\r\n      } else {\r\n        return question;\r\n      }\r\n    });\r\n\r\n    setQuestions(updatedQuestions);\r\n\r\n    setTimeout(() => {\r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < questions.length) {\r\n        setCurrentQuestion(nextQuestion);\r\n        setTimeLeft(10);\r\n      } else {\r\n        setQuizComplete(true);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const currentQuestionData = currentQuestion < questions.length ? questions[currentQuestion] : null;\r\n\r\n  if (quizComplete) {\r\n    const totalQuestions = questions.length;\r\n    const accuracy = (correctAnswers / totalQuestions) * 100;\r\n    return (\r\n      <div className=\"quiz\">\r\n        <h1>Quiz complet</h1>\r\n        <h2>Votre score final est : {score}</h2>\r\n        <h2>Nombre de bonnes réponses : {correctAnswers} / {totalQuestions}</h2>\r\n        <h2>Précision : {accuracy.toFixed(2)}%</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      <div className=\"quiz-content\">\r\n        <div className=\"question-section tertiary-bg\">\r\n          <div className=\"question-count white\">\r\n            Question {currentQuestion + 1}\r\n          </div>\r\n          <div className=\"question-text\">\r\n            <h2 className=\"question\">{currentQuestionData ? currentQuestionData.question : ''}</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"answer-section\">\r\n          {currentQuestionData && currentQuestionData.options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => handleAnswerButtonClick(option)}\r\n              className={currentQuestionData.selectedOption && (option === currentQuestionData.answer ? 'correct' : 'incorrect')}\r\n            >\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className=\"time-left blue\"> \r\n          Temps restant : {timeLeft} secondes \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Football;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}