{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanh\\\\OneDrive\\\\Bureau\\\\quizz\\\\src\\\\components\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const questions = [{\n    questionText: 'Quelle est la capitale de la France ?',\n    answerOptions: [{\n      answerText: 'Paris',\n      isCorrect: true\n    }, {\n      answerText: 'Londres',\n      isCorrect: false\n    }, {\n      answerText: 'Berlin',\n      isCorrect: false\n    }, {\n      answerText: 'Madrid',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Combien de continents y a-t-il dans le monde ?',\n    answerOptions: [{\n      answerText: 'Quatre',\n      isCorrect: false\n    }, {\n      answerText: 'Six',\n      isCorrect: false\n    }, {\n      answerText: 'Sept',\n      isCorrect: false\n    }, {\n      answerText: 'Cinq',\n      isCorrect: true\n    }]\n  }, {\n    questionText: 'Qui a écrit \"Le Petit Prince\" ?',\n    answerOptions: [{\n      answerText: 'Victor Hugo',\n      isCorrect: false\n    }, {\n      answerText: 'Antoine de Saint-Exupéry',\n      isCorrect: true\n    }, {\n      answerText: 'Jules Verne',\n      isCorrect: false\n    }, {\n      answerText: 'Gustave Flaubert',\n      isCorrect: false\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const handleAnswerButtonClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const restartQuiz = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You scored \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), \" out of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: questions.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"restart-button\",\n        onClick: restartQuiz,\n        children: \"Restart Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestion + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: questions[currentQuestion].questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: questions[currentQuestion].answerOptions.map((answerOption, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerButtonClick(answerOption.isCorrect),\n          children: answerOption.answerText\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"/sy2pvX1Q0450pE8xQIdkgXJpdM=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","handleAnswerButtonClick","nextQuestion","length","restartQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","answerOption","index","_c","$RefreshReg$"],"sources":["C:/Users/jeanh/OneDrive/Bureau/quizz/src/components/Quiz.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Quiz = () => {\r\n  const questions = [\r\n    {\r\n      questionText: 'Quelle est la capitale de la France ?',\r\n      answerOptions: [\r\n        { answerText: 'Paris', isCorrect: true },\r\n        { answerText: 'Londres', isCorrect: false },\r\n        { answerText: 'Berlin', isCorrect: false },\r\n        { answerText: 'Madrid', isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: 'Combien de continents y a-t-il dans le monde ?',\r\n      answerOptions: [\r\n        { answerText: 'Quatre', isCorrect: false },\r\n        { answerText: 'Six', isCorrect: false },\r\n        { answerText: 'Sept', isCorrect: false },\r\n        { answerText: 'Cinq', isCorrect: true },\r\n      ],\r\n    },\r\n    {\r\n      questionText: 'Qui a écrit \"Le Petit Prince\" ?',\r\n      answerOptions: [\r\n        { answerText: 'Victor Hugo', isCorrect: false },\r\n        { answerText: 'Antoine de Saint-Exupéry', isCorrect: true },\r\n        { answerText: 'Jules Verne', isCorrect: false },\r\n        { answerText: 'Gustave Flaubert', isCorrect: false },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  const handleAnswerButtonClick = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n\r\n  const restartQuiz = () => {\r\n    setCurrentQuestion(0);\r\n    setScore(0);\r\n    setShowScore(false);\r\n  };\r\n\r\n  return (\r\n    <div className='quiz'>\r\n      {showScore ? (\r\n        <div className='score-section'>\r\n          <p>You scored <strong>{score}</strong> out of <strong>{questions.length}</strong></p>\r\n          <button className=\"restart-button\" onClick={restartQuiz}>Restart Quiz</button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className='question-section'>\r\n            <div className='question-count'>\r\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n            </div>\r\n            <div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n          </div>\r\n          <div className='answer-section'>\r\n            {questions[currentQuestion].answerOptions.map((answerOption, index) => (\r\n              <button key={index} onClick={() => handleAnswerButtonClick(answerOption.isCorrect)}>\r\n                {answerOption.answerText}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}