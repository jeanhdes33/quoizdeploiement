{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanh\\\\OneDrive\\\\Bureau\\\\quizz - Copie - Copie\\\\client\\\\src\\\\components\\\\Categories\\\\Sports\\\\Football.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Football() {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [quizComplete, setQuizComplete] = useState(false);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [questionCount, setQuestionCount] = useState(0); // Ajout d'un compteur de questions\n\n  useEffect(() => {\n    fetchFootballQuestion();\n  }, []);\n  const fetchFootballQuestion = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/questions/football/random');\n      setQuestion(response.data);\n      setQuestionCount(questionCount + 1); // Incrémenter le compteur de questions\n    } catch (error) {\n      console.error('Erreur lors de la récupération de la question de football :', error);\n    }\n  };\n  const handleAnswerButtonClick = selectedOptionIndex => {\n    const isCorrect = selectedOptionIndex === question.correctOptionIndex;\n    let updatedScore = score;\n    if (isCorrect) {\n      updatedScore += 5; // Ajoute 5 points pour une réponse correcte\n      setCorrectAnswers(correctAnswers + 1);\n    } else {\n      updatedScore -= 1; // Retire 1 point pour une réponse incorrecte\n    }\n    setScore(updatedScore);\n    setQuizComplete(true); // Marquer le quiz comme complet\n\n    setTimeout(() => {\n      if (questionCount < 5) {\n        // Arrêter le quiz après 5 questions\n        fetchFootballQuestion(); // Charger une nouvelle question après avoir répondu\n        setTimeLeft(10); // Réinitialiser le temps pour la prochaine question\n        setQuizComplete(false); // Réinitialiser le quiz\n      }\n    }, 1000);\n  };\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: [!quizComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section tertiary-bg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count white\",\n          children: \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"question\",\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerButtonClick(index),\n          className: index === question.correctOptionIndex ? 'correct' : '',\n          disabled: quizComplete // Désactiver les boutons après la réponse\n          ,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-left\",\n        children: [\"Temps restant : \", timeLeft, \" secondes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), quizComplete && questionCount === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Score final : \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Football, \"hAY6QF9bi1WDKISKWmNRpW3+Ong=\");\n_c = Football;\nexport default Football;\nvar _c;\n$RefreshReg$(_c, \"Football\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Football","_s","question","setQuestion","quizComplete","setQuizComplete","score","setScore","correctAnswers","setCorrectAnswers","timeLeft","setTimeLeft","questionCount","setQuestionCount","fetchFootballQuestion","response","get","data","error","console","handleAnswerButtonClick","selectedOptionIndex","isCorrect","correctOptionIndex","updatedScore","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","map","option","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jeanh/OneDrive/Bureau/quizz - Copie - Copie/client/src/components/Categories/Sports/Football.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Football() {\r\n  const [question, setQuestion] = useState(null);\r\n  const [quizComplete, setQuizComplete] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(10);\r\n  const [questionCount, setQuestionCount] = useState(0); // Ajout d'un compteur de questions\r\n\r\n  useEffect(() => {\r\n    fetchFootballQuestion();\r\n  }, []);\r\n\r\n  const fetchFootballQuestion = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/questions/football/random');\r\n      setQuestion(response.data);\r\n      setQuestionCount(questionCount + 1); // Incrémenter le compteur de questions\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération de la question de football :', error);\r\n    }\r\n  };\r\n\r\n  const handleAnswerButtonClick = (selectedOptionIndex) => {\r\n    const isCorrect = selectedOptionIndex === question.correctOptionIndex;\r\n    let updatedScore = score;\r\n    if (isCorrect) {\r\n      updatedScore += 5; // Ajoute 5 points pour une réponse correcte\r\n      setCorrectAnswers(correctAnswers + 1);\r\n    } else {\r\n      updatedScore -= 1; // Retire 1 point pour une réponse incorrecte\r\n    }\r\n    setScore(updatedScore);\r\n    setQuizComplete(true); // Marquer le quiz comme complet\r\n\r\n    setTimeout(() => {\r\n      if (questionCount < 5) { // Arrêter le quiz après 5 questions\r\n        fetchFootballQuestion(); // Charger une nouvelle question après avoir répondu\r\n        setTimeLeft(10); // Réinitialiser le temps pour la prochaine question\r\n        setQuizComplete(false); // Réinitialiser le quiz\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  if (!question) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      {!quizComplete && (\r\n        <div className=\"quiz-content\">\r\n          <div className=\"question-section tertiary-bg\">\r\n            <div className=\"question-count white\">\r\n              Question\r\n            </div>\r\n            <div className=\"question-text\">\r\n              <h2 className=\"question\">{question.question}</h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"answer-section\">\r\n            {question.options.map((option, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleAnswerButtonClick(index)}\r\n                className={index === question.correctOptionIndex ? 'correct' : ''}\r\n                disabled={quizComplete} // Désactiver les boutons après la réponse\r\n              >\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div className=\"time-left\">\r\n            Temps restant : {timeLeft} secondes\r\n          </div>\r\n        </div>\r\n      )}\r\n      {quizComplete && questionCount === 5 && (\r\n        <div className=\"score-container\">\r\n          <h2>Score final : {score}</h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Football;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}